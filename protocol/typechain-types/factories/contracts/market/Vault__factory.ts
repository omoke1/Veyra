/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { Vault, VaultInterface } from "../../../contracts/market/Vault";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "collateral_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InsufficientCollateral",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidParameter",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyMarket",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "collateral",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "collateralOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "market",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market_",
        type: "address",
      },
    ],
    name: "setMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sweepTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawFromTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0604052348015600f57600080fd5b50604051610752380380610752833981016040819052602c916062565b6001600160a01b03811660525760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b03166080526090565b600060208284031215607357600080fd5b81516001600160a01b0381168114608957600080fd5b9392505050565b6080516106926100c060003960008181610133015281816101d00152818161035c015261044601526106926000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80634c109fd81161005b5780634c109fd8146100dd5780636dcea85f146100f057806380f5560514610103578063d8dfeb451461012e57600080fd5b806315cc36f2146100825780631aefb107146100975780634a4089cc146100ca575b600080fd5b61009561009036600461056f565b610155565b005b6100b76100a5366004610599565b60016020526000908152604090205481565b6040519081526020015b60405180910390f35b6100956100d83660046105bb565b610291565b6100956100eb36600461056f565b6103f2565b6100956100fe366004610599565b6104da565b600054610116906001600160a01b031681565b6040516001600160a01b0390911681526020016100c1565b6101167f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b0316331461018057604051639e0125a960e01b815260040160405180910390fd5b806000036101a157604051630309cb8760e51b815260040160405180910390fd5b6040516323b872dd60e01b81526001600160a01b038381166004830152306024830152604482018390526000917f0000000000000000000000000000000000000000000000000000000000000000909116906323b872dd906064016020604051808303816000875af115801561021b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023f91906105f8565b90508061025f576040516312171d8360e31b815260040160405180910390fd5b6001600160a01b03831660009081526001602052604081208054849290610287908490610630565b9091555050505050565b6000546001600160a01b031633146102bc57604051639e0125a960e01b815260040160405180910390fd5b806000036102dd57604051630309cb8760e51b815260040160405180910390fd5b6001600160a01b0383166000908152600160205260409020548181101561031757604051633a23d82560e01b815260040160405180910390fd5b6103218282610649565b6001600160a01b0385811660009081526001602052604080822093909355915163a9059cbb60e01b81528582166004820152602481018590527f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af11580156103a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cb91906105f8565b9050806103eb576040516312171d8360e31b815260040160405180910390fd5b5050505050565b6000546001600160a01b0316331461041d57604051639e0125a960e01b815260040160405180910390fd5b60405163a9059cbb60e01b81526001600160a01b038381166004830152602482018390526000917f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af1158015610491573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b591906105f8565b9050806104d5576040516312171d8360e31b815260040160405180910390fd5b505050565b600054600160a01b900460ff161561050557604051630309cb8760e51b815260040160405180910390fd5b6001600160a01b03811661052c5760405163d92e233d60e01b815260040160405180910390fd5b600080546001600160a81b0319166001600160a01b0390921691909117600160a01b179055565b80356001600160a01b038116811461056a57600080fd5b919050565b6000806040838503121561058257600080fd5b61058b83610553565b946020939093013593505050565b6000602082840312156105ab57600080fd5b6105b482610553565b9392505050565b6000806000606084860312156105d057600080fd5b6105d984610553565b92506105e760208501610553565b929592945050506040919091013590565b60006020828403121561060a57600080fd5b815180151581146105b457600080fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156106435761064361061a565b92915050565b818103818111156106435761064361061a56fea2646970667358221220a8876f2bc7564a5815acf22e7643ff3fee7da610d9f8b12dd4ddd94bc0d58fc564736f6c634300081a0033";

type VaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Vault__factory extends ContractFactory {
  constructor(...args: VaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    collateral_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(collateral_, overrides || {});
  }
  override deploy(
    collateral_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(collateral_, overrides || {}) as Promise<
      Vault & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Vault__factory {
    return super.connect(runner) as Vault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultInterface {
    return new Interface(_abi) as VaultInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Vault {
    return new Contract(address, _abi, runner) as unknown as Vault;
  }
}
